package dungeonViewer;

import dungeonViewer.builders.BlockBuilder;
import olcPGEApproach.vectors.points2d.Vec2di;
import orthographicViewer.CellSide;

/**
 * This class stores the chunk of code to build
 * my world what I was original working
 */
public class WorldBuilder {

    public static final String map =
            "################################################################" +
            "#.........#....................##..............................#" +
            "#.........#....................................................#" +
            "#.........#....................................................#" +
            "#.........#....................................................#" +
            "#.........#############........................................#" +
            "#...............#..............................................#" +
            "#...............#..............................................#" +
            "#...............#..............................................#" +
            "#.....#..#..#...#..............................................#" +
            "#...............#..............................................#" +
            "#...............#..............................................#" +
            "#.....#..#..#...........................................####...#" +
            "#..........................................................#...#" +
            "#..........................................................#...#" +
            "#.......................................................#..#...#" +
            "#.......................................................#..#...#" +
            "#.....................######..#......................####..#...#" +
            "#.....................#.......#......................#.....#...#" +
            "#....................##.###.###.........................#..#...#" +
            "#....................##.....#........................#..#..#...#" +
            "#....................##.#####.....................####..#..#...#" +
            "#....................#.#.........................#......#..#...#" +
            "#....................#..#.......................##..#####..#...#" +
            "#..............................................##..##......#...#" +
            "#.................................................##...........#" +
            "#..............................................................#" +
            "#..............................................................#" +
            "#..............................##..............................#" +
            "#..............................##..............................#" +
            "#..............................##..............................#" +
            "################################################################";

    public static final Vec2di mapSize = new Vec2di(64, 32);

    /**
     * @return the original world what I was working
     */
    public static BlockWorld buildWorld() {
        BlockWorld world = new BlockWorld(mapSize.getX(), mapSize.getY());
        for ( int y = 0; y < world.getSize().getY(); y++ ) {
            for ( int x = 0; x < world.getSize().getX(); x++ ) {
                Block b;
                if ( map.toCharArray()[x + mapSize.getX() * y] == '#') {
                    b = BlockBuilder.buildBlock(new Vec2di());
                    b.setWall(CellSide.TOP, new Vec2di(3, 3));
                    b.setWall(CellSide.NORTH, new Vec2di(4, 0));
                    b.setWall(CellSide.SOUTH, new Vec2di(3, 0));
                    b.setWall(CellSide.WEST, new Vec2di(4, 0));
                    b.setWall(CellSide.EAST, new Vec2di(3, 0));
                } else {
                    b = BlockBuilder.buildGround(new Vec2di(0, 5));
                }
                b.getPosition().setX(x);
                b.getPosition().setY(y);
                world.setBlock(x, y, b);
            }
        }

        Block b = BlockBuilder.buildBlock(new Vec2di(4, 0));
        b.setWall(CellSide.TOP, new Vec2di(3, 3));
        b.setWall(CellSide.SOUTH, new Vec2di(0, 2));
        b.getPosition().setX(5);
        b.getPosition().setY(4);
        world.setBlock(5, 4, b);

        int startY = 10;
        int endY = 16;
        int startX = 3;
        int endX = 7;
        for ( int y = startY; y < endY; y++ ) {
            for ( int x = startX; x < endX; x++ ) {
                if ( !world.getBlock(x, y).isWall() ) {
                    world.getBlock(x, y).setWall(CellSide.BOTTOM, new Vec2di(3, 5));
                }
            }
        }

        return world;
    }

}
